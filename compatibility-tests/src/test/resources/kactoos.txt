Test failForNullResult(nnl.rocks.kactoos.BiFuncTest)
Test failForNullFunc(nnl.rocks.kactoos.BiFuncTest)
Test okForNoNulls(nnl.rocks.kactoos.BiFuncTest)
Test failForNullFirstArg(nnl.rocks.kactoos.BiFuncTest)
Test failForNullSecondArg(nnl.rocks.kactoos.BiFuncTest)
Test checkDecode(nnl.rocks.kactoos.bytes.Base64BytesTest)
Test checkEncode(nnl.rocks.kactoos.bytes.BytesBase64Test)
Test okForNoNulls(nnl.rocks.kactoos.BytesTest)
Test buildsCollection(nnl.rocks.kactoos.collection.CollectionOfTest)
Test buildsCollectionFromIterator(nnl.rocks.kactoos.collection.CollectionOfTest)
Test behavesAsCollection(nnl.rocks.kactoos.collection.CollectionOfTest)
Test filterList(nnl.rocks.kactoos.collection.FilteredTest)
Test withItemsNotEmpty(nnl.rocks.kactoos.collection.FilteredTest)
Test size(nnl.rocks.kactoos.collection.FilteredTest)
Test behavesAsCollection(nnl.rocks.kactoos.collection.FilteredTest)
Test filterEmptyList(nnl.rocks.kactoos.collection.FilteredTest)
Test withoutItemsIsEmpty(nnl.rocks.kactoos.collection.FilteredTest)
Test withItemsNotEmpty(nnl.rocks.kactoos.collection.JoinedTest)
Test sizeEmptyReturnZero(nnl.rocks.kactoos.collection.JoinedTest)
Test size(nnl.rocks.kactoos.collection.JoinedTest)
Test behavesAsCollection(nnl.rocks.kactoos.collection.JoinedTest)
Test withoutItemsIsEmpty(nnl.rocks.kactoos.collection.JoinedTest)
Test withItemsNotEmpty(nnl.rocks.kactoos.collection.LimitedTest)
Test sizeEmptyReturnZero(nnl.rocks.kactoos.collection.LimitedTest)
Test size(nnl.rocks.kactoos.collection.LimitedTest)
Test behavesAsCollection(nnl.rocks.kactoos.collection.LimitedTest)
Test withoutItemsIsEmpty(nnl.rocks.kactoos.collection.LimitedTest)
Test sizeLimitZeroReturnZero(nnl.rocks.kactoos.collection.LimitedTest)
Test transformsList(nnl.rocks.kactoos.collection.MappedTest)
Test transformsEmptyList(nnl.rocks.kactoos.collection.MappedTest)
Test behavesAsCollection(nnl.rocks.kactoos.collection.MappedTest)
Test toArrayWithArray(nnl.rocks.kactoos.collection.ReversedTest)
Test toArray(nnl.rocks.kactoos.collection.ReversedTest)
Test contains(nnl.rocks.kactoos.collection.ReversedTest)
Test reverseEmptyList(nnl.rocks.kactoos.collection.ReversedTest)
Test size(nnl.rocks.kactoos.collection.ReversedTest)
Test containsAll(nnl.rocks.kactoos.collection.ReversedTest)
Test behavesAsCollection(nnl.rocks.kactoos.collection.ReversedTest)
Test reverseList(nnl.rocks.kactoos.collection.ReversedTest)
Test isEmpty(nnl.rocks.kactoos.collection.ReversedTest)
Test shufflesCollection(nnl.rocks.kactoos.collection.ShuffledTest)
Test behavesAsCollection(nnl.rocks.kactoos.collection.ShuffledTest)
Test shufflesArray(nnl.rocks.kactoos.collection.ShuffledTest)
Test shufflesIterable(nnl.rocks.kactoos.collection.ShuffledTest)
Test makesListFromMappedIterable(nnl.rocks.kactoos.collection.SolidCollectionTest)
Test worksInThreads(nnl.rocks.kactoos.collection.SolidCollectionTest)
Test behavesAsCollection(nnl.rocks.kactoos.collection.SolidCollectionTest)
Test mapsToSameObjects(nnl.rocks.kactoos.collection.SolidCollectionTest)
Test sortsCollection(nnl.rocks.kactoos.collection.SortedTest)
Test behavesAsCollection(nnl.rocks.kactoos.collection.SortedTest)
Test decoratesArray(nnl.rocks.kactoos.collection.StickyCollectionTest)
Test testToArray(nnl.rocks.kactoos.collection.StickyCollectionTest)
Test testEmpty(nnl.rocks.kactoos.collection.StickyCollectionTest)
Test testContainsAll(nnl.rocks.kactoos.collection.StickyCollectionTest)
Test testContains(nnl.rocks.kactoos.collection.StickyCollectionTest)
Test behavesAsCollection(nnl.rocks.kactoos.collection.StickyCollectionTest)
Test testToArrayIntoArray(nnl.rocks.kactoos.collection.StickyCollectionTest)
Test ignoresChangesInIterable(nnl.rocks.kactoos.collection.StickyCollectionTest)
Test worksInThreads(nnl.rocks.kactoos.collection.SyncCollectionTest)
Test behavesAsCollection(nnl.rocks.kactoos.collection.SyncCollectionTest)
Test runsAsProcInBackground(nnl.rocks.kactoos.func.AsyncFuncTest)
Test runsInBackgroundWithoutFuture(nnl.rocks.kactoos.func.AsyncFuncTest)
Test runsInBackground(nnl.rocks.kactoos.func.AsyncFuncTest)
Test convertsRunnableIntoBiFunc(nnl.rocks.kactoos.func.BiFuncOfTest)
Test convertsValueIntoBiFunc(nnl.rocks.kactoos.func.BiFuncOfTest)
Test convertsProcWithNoResultIntoBiFunc(nnl.rocks.kactoos.func.BiFuncOfTest)
Test convertsFuncIntoBiFunc(nnl.rocks.kactoos.func.BiFuncOfTest)
Test convertsProcIntoBiFunc(nnl.rocks.kactoos.func.BiFuncOfTest)
Test convertsFuncIntoCallable(nnl.rocks.kactoos.func.CallableOfTest)
Test withIterable(nnl.rocks.kactoos.func.ChainedFuncTest)
Test withoutIterable(nnl.rocks.kactoos.func.ChainedFuncTest)
Test convertsProcWithNoResultIntoFunc(nnl.rocks.kactoos.func.FuncOfTest)
Test convertsValueIntoFunc(nnl.rocks.kactoos.func.FuncOfTest)
Test convertsRunnableIntoFunc(nnl.rocks.kactoos.func.FuncOfTest)
Test convertsProcIntoFunc(nnl.rocks.kactoos.func.FuncOfTest)
Test usesFallback(nnl.rocks.kactoos.func.FuncWithFallbackTest)
Test usesMainFunc(nnl.rocks.kactoos.func.FuncWithFallbackTest)
Test usesFollowUp(nnl.rocks.kactoos.func.FuncWithFallbackTest)
Test runtimeExceptionGoesOut(nnl.rocks.kactoos.func.IoCheckedBiFuncTest)
Test rethrowsCheckedToIoException(nnl.rocks.kactoos.func.IoCheckedBiFuncTest)
Test rethrowsIoException(nnl.rocks.kactoos.func.IoCheckedBiFuncTest)
Test runtimeExceptionGoesOut(nnl.rocks.kactoos.func.IoCheckedFuncTest)
Test rethrowsCheckedToIoException(nnl.rocks.kactoos.func.IoCheckedFuncTest)
Test rethrowsIoException(nnl.rocks.kactoos.func.IoCheckedFuncTest)
Test runtimeExceptionGoesOut(nnl.rocks.kactoos.func.IoCheckedProcTest)
Test rethrowsCheckedToIoException(nnl.rocks.kactoos.func.IoCheckedProcTest)
Test rethrowsIoException(nnl.rocks.kactoos.func.IoCheckedProcTest)
Test doesntRepeatAny(nnl.rocks.kactoos.func.RepeatedFuncTest)
Test repeatsNullsResults(nnl.rocks.kactoos.func.RepeatedFuncTest)
Test runsFuncMultipleTimes(nnl.rocks.kactoos.func.RepeatedFuncTest)
Test runsFuncMultipleTimes(nnl.rocks.kactoos.func.RetryFuncTest)
Test convertsFuncIntoRunnable(nnl.rocks.kactoos.func.RunnableOfTest)
Test cachesFuncResults(nnl.rocks.kactoos.func.SolidFuncTest)
Test worksInThreads(nnl.rocks.kactoos.func.SolidFuncTest)
Test cachesFuncResults(nnl.rocks.kactoos.func.StickyBiFuncTest)
Test cachesFuncResults(nnl.rocks.kactoos.func.StickyFuncTest)
Test cachesWithZeroBuffer(nnl.rocks.kactoos.func.StickyFuncTest)
Test cachesWithLimitedBuffer(nnl.rocks.kactoos.func.StickyFuncTest)
Test worksInThreads(nnl.rocks.kactoos.func.SyncFuncTest)
Test runtimeExceptionGoesOut(nnl.rocks.kactoos.func.UncheckedBiFuncTest)
Test testUncheckedBiFunc(nnl.rocks.kactoos.func.UncheckedBiFuncTest)
Test rethrowsCheckedToUncheckedException(nnl.rocks.kactoos.func.UncheckedBiFuncTest)
Test runtimeExceptionGoesOut(nnl.rocks.kactoos.func.UncheckedFuncTest)
Test rethrowsCheckedToUncheckedException(nnl.rocks.kactoos.func.UncheckedFuncTest)
Test runtimeExceptionGoesOut(nnl.rocks.kactoos.func.UncheckedProcTest)
Test rethrowsCheckedToUncheckedException(nnl.rocks.kactoos.func.UncheckedProcTest)
Test failForNullResult(nnl.rocks.kactoos.FuncTest)
Test failForNullFunc(nnl.rocks.kactoos.FuncTest)
Test okForNoNulls(nnl.rocks.kactoos.FuncTest)
Test failForNullInput(nnl.rocks.kactoos.FuncTest)
Test failForNullStream(nnl.rocks.kactoos.InputTest)
Test okForNoNullInput(nnl.rocks.kactoos.InputTest)
Test closesInputStream(nnl.rocks.kactoos.io.BytesOfTest)
Test readsInputIntoBytesWithSmallBuffer(nnl.rocks.kactoos.io.BytesOfTest)
Test readsLargeInMemoryContent(nnl.rocks.kactoos.io.BytesOfTest)
Test readsInputIntoBytes(nnl.rocks.kactoos.io.BytesOfTest)
Test asBytes(nnl.rocks.kactoos.io.BytesOfTest)
Test printsStackTrace(nnl.rocks.kactoos.io.BytesOfTest)
Test readsFromReader(nnl.rocks.kactoos.io.BytesOfTest)
Test readsEmptyContent(nnl.rocks.kactoos.io.DeadInputTest)
Test readsEmptyContent(nnl.rocks.kactoos.io.DeadOutputTest)
Test listsFilesInDirectory(nnl.rocks.kactoos.io.DirectoryTest)
Test readsInputIntoBytesWithSmallBuffer(nnl.rocks.kactoos.io.InputAsBytesTest)
Test readsLargeInMemoryContent(nnl.rocks.kactoos.io.InputAsBytesTest)
Test readsInputIntoBytes(nnl.rocks.kactoos.io.InputAsBytesTest)
Test readsLargeContent(nnl.rocks.kactoos.io.InputAsBytesTest)
Test readsStringBuilder(nnl.rocks.kactoos.io.InputOfTest)
Test closesInputStream(nnl.rocks.kactoos.io.InputOfTest)
Test readsArrayOfChars(nnl.rocks.kactoos.io.InputOfTest)
Test readsSimpleFileContent(nnl.rocks.kactoos.io.InputOfTest)
Test readsStringUrl(nnl.rocks.kactoos.io.InputOfTest)
Test readsRealUrl(nnl.rocks.kactoos.io.InputOfTest)
Test makesDataAvailable(nnl.rocks.kactoos.io.InputOfTest)
Test readsEncodedArrayOfChars(nnl.rocks.kactoos.io.InputOfTest)
Test readsFileContent(nnl.rocks.kactoos.io.InputOfTest)
Test readsAlternativeInputForFileCase(nnl.rocks.kactoos.io.InputOfTest)
Test readsStringBuffer(nnl.rocks.kactoos.io.InputOfTest)
Test readsEncodedStringFromReader(nnl.rocks.kactoos.io.InputOfTest)
Test readsAnArrayOfBytes(nnl.rocks.kactoos.io.InputOfTest)
Test readsStringIntoBytes(nnl.rocks.kactoos.io.InputOfTest)
Test readsStringFromReader(nnl.rocks.kactoos.io.InputOfTest)
Test readsSimpleFileContent(nnl.rocks.kactoos.io.InputStreamOfTest)
Test readsFromReaderThroughSmallBuffer(nnl.rocks.kactoos.io.InputStreamOfTest)
Test makesDataAvailable(nnl.rocks.kactoos.io.InputStreamOfTest)
Test readsFromReader(nnl.rocks.kactoos.io.InputStreamOfTest)
Test readsAlternativeInputUri(nnl.rocks.kactoos.io.InputWithFallbackTest)
Test readsAlternativeInput(nnl.rocks.kactoos.io.InputWithFallbackTest)
Test readsBiggerInput(nnl.rocks.kactoos.io.LSInputOfTest)
Test countsBytesInBiggerInput(nnl.rocks.kactoos.io.LSInputOfTest)
Test readsSimpleInput(nnl.rocks.kactoos.io.LSInputOfTest)
Test writesLargeContentToFile(nnl.rocks.kactoos.io.OutputStreamToTest)
Test writesSimpleFileContent(nnl.rocks.kactoos.io.OutputToTest)
Test writesSimplePathContent(nnl.rocks.kactoos.io.OutputToTest)
Test readsString(nnl.rocks.kactoos.io.ReaderAsBytesTest)
Test readsSimpleFileContent(nnl.rocks.kactoos.io.ReaderOfTest)
Test readAbsentResourceTest(nnl.rocks.kactoos.io.ResourceOfTest)
Test readsBinaryResource(nnl.rocks.kactoos.io.ResourceOfTest)
Test throwsWhenResourceIsAbsent(nnl.rocks.kactoos.io.ResourceOfTest)
Test readsTextResource(nnl.rocks.kactoos.io.ResourceOfTest)
Test readsFileContentSlowly(nnl.rocks.kactoos.io.SlowInputTest)
Test calculatesLength(nnl.rocks.kactoos.io.SlowInputTest)
Test readsFileContentSlowlyAndCountsLength(nnl.rocks.kactoos.io.StickyInputTest)
Test readsRealUrl(nnl.rocks.kactoos.io.StickyInputTest)
Test readsFileContentSlowly(nnl.rocks.kactoos.io.StickyInputTest)
Test readsFileContent(nnl.rocks.kactoos.io.StickyInputTest)
Test copiesContentByteByByte(nnl.rocks.kactoos.io.TeeInputStreamTest)
Test copiesToFile(nnl.rocks.kactoos.io.TeeInputTest)
Test copiesContent(nnl.rocks.kactoos.io.TeeInputTest)
Test copiesContentByteByByte(nnl.rocks.kactoos.io.TeeOutputStreamTest)
Test copiesContent(nnl.rocks.kactoos.io.TeeOutputTest)
Test testTeeReader(nnl.rocks.kactoos.io.TeeReaderTest)
Test rethrowsCheckedToUncheckedException(nnl.rocks.kactoos.io.UncheckedBytesTest)
Test rethrowsCheckedToUncheckedException(nnl.rocks.kactoos.io.UncheckedOutputTest)
Test writesLargeContentToFile(nnl.rocks.kactoos.io.WriterAsOutputStreamTest)
Test writesToByteArray(nnl.rocks.kactoos.io.WriterAsOutputStreamTest)
Test writesLargeContentToFile(nnl.rocks.kactoos.io.WriterAsOutputTest)
Test writesLargeContentToFile(nnl.rocks.kactoos.io.WriterToTest)
Test repeatIterableTest(nnl.rocks.kactoos.iterable.CycledTest)
Test notCycledEmptyTest(nnl.rocks.kactoos.iterable.CycledTest)
Test endlessIterableTest(nnl.rocks.kactoos.iterable.EndlessTest)
Test filtersIterablesWithSize(nnl.rocks.kactoos.iterable.FilteredTest)
Test filtersList(nnl.rocks.kactoos.iterable.FilteredTest)
Test filtersEmptyList(nnl.rocks.kactoos.iterable.FilteredTest)
Test fallbackTest(nnl.rocks.kactoos.iterable.ItemAtTest)
Test failForEmptyCollectionTest(nnl.rocks.kactoos.iterable.ItemAtTest)
Test elementByPosTest(nnl.rocks.kactoos.iterable.ItemAtTest)
Test firstElementTest(nnl.rocks.kactoos.iterable.ItemAtTest)
Test convertsObjectsToIterable(nnl.rocks.kactoos.iterable.IterableOfTest)
Test convertsScalarsToIterable(nnl.rocks.kactoos.iterable.IterableOfTest)
Test convertsArrayOfIntsToIterable(nnl.rocks.kactoos.iterable.IterableOfTest)
Test transformsList(nnl.rocks.kactoos.iterable.JoinedTest)
Test joinsIterables(nnl.rocks.kactoos.iterable.JoinedTest)
Test joinsIterablesWithSize(nnl.rocks.kactoos.iterable.JoinedTest)
Test negativeLimitProducesEmptyIterable(nnl.rocks.kactoos.iterable.LimitedTest)
Test limitOfZeroProducesEmptyIterable(nnl.rocks.kactoos.iterable.LimitedTest)
Test iteratesOverWholeIterableIfThereAreNotEnoughItems(nnl.rocks.kactoos.iterable.LimitedTest)
Test emptyIterableProducesEmptyIterable(nnl.rocks.kactoos.iterable.LimitedTest)
Test iteratesOverPrefixOfGivenLength(nnl.rocks.kactoos.iterable.LimitedTest)
Test transformsList(nnl.rocks.kactoos.iterable.MappedTest)
Test transformsEmptyList(nnl.rocks.kactoos.iterable.MappedTest)
Test partitionedEmpty(nnl.rocks.kactoos.iterable.PartitionedTest)
Test partitionedWithPartial(nnl.rocks.kactoos.iterable.PartitionedTest)
Test readsStringContent(nnl.rocks.kactoos.iterable.PropertiesOfTest)
Test readsInputContent(nnl.rocks.kactoos.iterable.PropertiesOfTest)
Test sensesChangesInMap(nnl.rocks.kactoos.iterable.PropertiesOfTest)
Test convertsMapToProperties(nnl.rocks.kactoos.iterable.PropertiesOfTest)
Test testIntegerFibonacciRange(nnl.rocks.kactoos.iterable.RangeOfTest)
Test testCharacterRange(nnl.rocks.kactoos.iterable.RangeOfTest)
Test testIntegerRange(nnl.rocks.kactoos.iterable.RangeOfTest)
Test testLongRange(nnl.rocks.kactoos.iterable.RangeOfTest)
Test testLocalDateRange(nnl.rocks.kactoos.iterable.RangeOfTest)
Test emptyTest(nnl.rocks.kactoos.iterable.RepeatedTest)
Test repeatsIntegerTwice(nnl.rocks.kactoos.iterable.RepeatedTest)
Test allSameTest(nnl.rocks.kactoos.iterable.RepeatedTest)
Test reversesIterable(nnl.rocks.kactoos.iterable.ReversedTest)
Test shuffleArray(nnl.rocks.kactoos.iterable.ShuffledTest)
Test skipIterable(nnl.rocks.kactoos.iterable.SkippedTest)
Test makesListFromMappedIterable(nnl.rocks.kactoos.iterable.SolidIterableTest)
Test worksInThreads(nnl.rocks.kactoos.iterable.SolidIterableTest)
Test mapsToSameObjects(nnl.rocks.kactoos.iterable.SolidIterableTest)
Test sortsAnArrayWithComparator(nnl.rocks.kactoos.iterable.SortedTest)
Test sortsAnEmptyArray(nnl.rocks.kactoos.iterable.SortedTest)
Test sortsAnArray(nnl.rocks.kactoos.iterable.SortedTest)
Test ignoresChangesInIterable(nnl.rocks.kactoos.iterable.StickyIterableTest)
Test worksInThreads(nnl.rocks.kactoos.iterable.SyncIterableTest)
Test notCycledEmptyTest(nnl.rocks.kactoos.iterator.CycledTest)
Test repeatIteratorTest(nnl.rocks.kactoos.iterator.CycledTest)
Test fallbackTest(nnl.rocks.kactoos.iterator.ItemAtTest)
Test failForPosMoreLengthTest(nnl.rocks.kactoos.iterator.ItemAtTest)
Test failForEmptyCollectionTest(nnl.rocks.kactoos.iterator.ItemAtTest)
Test elementByPosTest(nnl.rocks.kactoos.iterator.ItemAtTest)
Test failForNegativePositionTest(nnl.rocks.kactoos.iterator.ItemAtTest)
Test firstElementTest(nnl.rocks.kactoos.iterator.ItemAtTest)
Test joinsIterators(nnl.rocks.kactoos.iterator.JoinedTest)
Test emptyPartitionedNextThrowsException(nnl.rocks.kactoos.iterator.PartitionedTest)
Test partitionedOne(nnl.rocks.kactoos.iterator.PartitionedTest)
Test partitionedEqualSize(nnl.rocks.kactoos.iterator.PartitionedTest)
Test partitionedLastPartitionSmaller(nnl.rocks.kactoos.iterator.PartitionedTest)
Test partitionedWithPartitionSizeSmallerOne(nnl.rocks.kactoos.iterator.PartitionedTest)
Test emptyPartitioned(nnl.rocks.kactoos.iterator.PartitionedTest)
Test emptyTest(nnl.rocks.kactoos.iterator.RepeatedTest)
Test allSameTest(nnl.rocks.kactoos.iterator.RepeatedTest)
Test shuffleIterable(nnl.rocks.kactoos.iterator.ShuffledTest)
Test errorSkippedMoreThanExists(nnl.rocks.kactoos.iterator.SkippedTest)
Test skipIterator(nnl.rocks.kactoos.iterator.SkippedTest)
Test sortsIterable(nnl.rocks.kactoos.iterator.SortedTest)
Test ignoresChangesInIterable(nnl.rocks.kactoos.iterator.StickyTest)
Test subList(nnl.rocks.kactoos.list.JoinedTest)
Test toArray(nnl.rocks.kactoos.list.JoinedTest)
Test listIteratorSecond(nnl.rocks.kactoos.list.JoinedTest)
Test contains(nnl.rocks.kactoos.list.JoinedTest)
Test get(nnl.rocks.kactoos.list.JoinedTest)
Test size(nnl.rocks.kactoos.list.JoinedTest)
Test containsAll(nnl.rocks.kactoos.list.JoinedTest)
Test behavesAsCollection(nnl.rocks.kactoos.list.JoinedTest)
Test iterator(nnl.rocks.kactoos.list.JoinedTest)
Test isEmpty(nnl.rocks.kactoos.list.JoinedTest)
Test lowBoundTest(nnl.rocks.kactoos.list.ListOfTest)
Test makesListFromMappedIterable(nnl.rocks.kactoos.list.ListOfTest)
Test emptyTest(nnl.rocks.kactoos.list.ListOfTest)
Test elementAtIndexTest(nnl.rocks.kactoos.list.ListOfTest)
Test sensesChangesInIterable(nnl.rocks.kactoos.list.ListOfTest)
Test behavesAsCollection(nnl.rocks.kactoos.list.ListOfTest)
Test sizeTest(nnl.rocks.kactoos.list.ListOfTest)
Test highBoundTest(nnl.rocks.kactoos.list.ListOfTest)
Test transformsList(nnl.rocks.kactoos.list.MappedTest)
Test transformsEmptyList(nnl.rocks.kactoos.list.MappedTest)
Test behavesAsCollection(nnl.rocks.kactoos.list.MappedTest)
Test shufflesList(nnl.rocks.kactoos.list.ShuffledTest)
Test behavesAsCollection(nnl.rocks.kactoos.list.ShuffledTest)
Test makesListFromMappedIterable(nnl.rocks.kactoos.list.SolidListTest)
Test worksInThreads(nnl.rocks.kactoos.list.SolidListTest)
Test behavesAsCollection(nnl.rocks.kactoos.list.SolidListTest)
Test mapsToSameObjects(nnl.rocks.kactoos.list.SolidListTest)
Test takesItemFromSortedList(nnl.rocks.kactoos.list.SortedTest)
Test sortsCollection(nnl.rocks.kactoos.list.SortedTest)
Test behavesAsCollection(nnl.rocks.kactoos.list.SortedTest)
Test decoratesArray(nnl.rocks.kactoos.list.StickyListTest)
Test makesListFromMappedIterable(nnl.rocks.kactoos.list.StickyListTest)
Test testToArray(nnl.rocks.kactoos.list.StickyListTest)
Test testGet(nnl.rocks.kactoos.list.StickyListTest)
Test testEmpty(nnl.rocks.kactoos.list.StickyListTest)
Test testLastIndexOf(nnl.rocks.kactoos.list.StickyListTest)
Test testContainsAll(nnl.rocks.kactoos.list.StickyListTest)
Test testContains(nnl.rocks.kactoos.list.StickyListTest)
Test behavesAsCollection(nnl.rocks.kactoos.list.StickyListTest)
Test mapsToSameObjects(nnl.rocks.kactoos.list.StickyListTest)
Test testIndexOf(nnl.rocks.kactoos.list.StickyListTest)
Test testToArrayIntoArray(nnl.rocks.kactoos.list.StickyListTest)
Test ignoresChangesInIterable(nnl.rocks.kactoos.list.StickyListTest)
Test testSubList(nnl.rocks.kactoos.list.StickyListTest)
Test worksInThreads(nnl.rocks.kactoos.list.SyncListTest)
Test behavesAsCollection(nnl.rocks.kactoos.list.SyncListTest)
Test getKey(nnl.rocks.kactoos.map.MapEntryTest)
Test compareHash(nnl.rocks.kactoos.map.MapEntryTest)
Test equalsTo(nnl.rocks.kactoos.map.MapEntryTest)
Test getValue(nnl.rocks.kactoos.map.MapEntryTest)
Test behavesAsMap(nnl.rocks.kactoos.map.MapOfTest)
Test convertsIterableToMap(nnl.rocks.kactoos.map.MapOfTest)
Test sensesChangesInMap(nnl.rocks.kactoos.map.MapOfTest)
Test createsMapWithFunctions(nnl.rocks.kactoos.map.MapOfTest)
Test behavesAsMap(nnl.rocks.kactoos.map.SolidMapTest)
Test worksInThreads(nnl.rocks.kactoos.map.SolidMapTest)
Test mapsToSameObjects(nnl.rocks.kactoos.map.SolidMapTest)
Test extendsExistingMapWithTwoFuncs(nnl.rocks.kactoos.map.StickyMapTest)
Test extendsExistingMap(nnl.rocks.kactoos.map.StickyMapTest)
Test behavesAsMap(nnl.rocks.kactoos.map.StickyMapTest)
Test extendsExistingMapWithFunc(nnl.rocks.kactoos.map.StickyMapTest)
Test decoratesEntries(nnl.rocks.kactoos.map.StickyMapTest)
Test ignoresChangesInMap(nnl.rocks.kactoos.map.StickyMapTest)
Test behavesAsMap(nnl.rocks.kactoos.map.SyncMapTest)
Test worksInThreads(nnl.rocks.kactoos.map.SyncMapTest)
Test okForNoNullOutput(nnl.rocks.kactoos.OutputTest)
Test okForNoNulls(nnl.rocks.kactoos.ProcTest)
Test emptyIterator(nnl.rocks.kactoos.scalar.AndInThreadsTest)
Test testFunc(nnl.rocks.kactoos.scalar.AndInThreadsTest)
Test testProc(nnl.rocks.kactoos.scalar.AndInThreadsTest)
Test allTrue(nnl.rocks.kactoos.scalar.AndInThreadsTest)
Test iteratesEmptyList(nnl.rocks.kactoos.scalar.AndInThreadsTest)
Test iteratesList(nnl.rocks.kactoos.scalar.AndInThreadsTest)
Test allFalse(nnl.rocks.kactoos.scalar.AndInThreadsTest)
Test oneFalse(nnl.rocks.kactoos.scalar.AndInThreadsTest)
Test emptyIterator(nnl.rocks.kactoos.scalar.AndTest)
Test testFunc(nnl.rocks.kactoos.scalar.AndTest)
Test testProc(nnl.rocks.kactoos.scalar.AndTest)
Test allTrue(nnl.rocks.kactoos.scalar.AndTest)
Test iteratesEmptyList(nnl.rocks.kactoos.scalar.AndTest)
Test iteratesList(nnl.rocks.kactoos.scalar.AndTest)
Test allFalse(nnl.rocks.kactoos.scalar.AndTest)
Test oneFalse(nnl.rocks.kactoos.scalar.AndTest)
Test iteratesListWithIndex(nnl.rocks.kactoos.scalar.AndWithIndexTest)
Test withScalars(nnl.rocks.kactoos.scalar.AvgOfTest)
Test withLongCollection(nnl.rocks.kactoos.scalar.AvgOfTest)
Test withIntegerCollection(nnl.rocks.kactoos.scalar.AvgOfTest)
Test withEmptyCollection(nnl.rocks.kactoos.scalar.AvgOfTest)
Test withFloatCollection(nnl.rocks.kactoos.scalar.AvgOfTest)
Test withDoubleCollection(nnl.rocks.kactoos.scalar.AvgOfTest)
Test falseTest(nnl.rocks.kactoos.scalar.BoolOfTest)
Test isFalseIfTextDoesNotRepresentABoolean(nnl.rocks.kactoos.scalar.BoolOfTest)
Test trueTest(nnl.rocks.kactoos.scalar.BoolOfTest)
Test compareEquals(nnl.rocks.kactoos.scalar.EqualsTest)
Test compareNotEquals(nnl.rocks.kactoos.scalar.EqualsTest)
Test compareEqualsText(nnl.rocks.kactoos.scalar.EqualsTest)
Test compareNotEqualsText(nnl.rocks.kactoos.scalar.EqualsTest)
Test asValue(nnl.rocks.kactoos.scalar.FalseTest)
Test runtimeExceptionGoesOut(nnl.rocks.kactoos.scalar.IoCheckedScalarTest)
Test throwsException(nnl.rocks.kactoos.scalar.IoCheckedScalarTest)
Test rethrowsIoException(nnl.rocks.kactoos.scalar.IoCheckedScalarTest)
Test withLongCollection(nnl.rocks.kactoos.scalar.MaxOfTest)
Test withIntegerCollection(nnl.rocks.kactoos.scalar.MaxOfTest)
Test withFloatCollection(nnl.rocks.kactoos.scalar.MaxOfTest)
Test withDoubleCollection(nnl.rocks.kactoos.scalar.MaxOfTest)
Test withLongCollection(nnl.rocks.kactoos.scalar.MinOfTest)
Test withIntegerCollection(nnl.rocks.kactoos.scalar.MinOfTest)
Test withFloatCollection(nnl.rocks.kactoos.scalar.MinOfTest)
Test withDoubleCollection(nnl.rocks.kactoos.scalar.MinOfTest)
Test falseToTrue(nnl.rocks.kactoos.scalar.NotTest)
Test trueToFalse(nnl.rocks.kactoos.scalar.NotTest)
Test failsIfTextDoesNotRepresentALong(nnl.rocks.kactoos.scalar.NumberOfTest)
Test failsIfTextDoesNotRepresentAnInt(nnl.rocks.kactoos.scalar.NumberOfTest)
Test failsIfTextDoesNotRepresentADouble(nnl.rocks.kactoos.scalar.NumberOfTest)
Test parsesLong(nnl.rocks.kactoos.scalar.NumberOfTest)
Test failsIfTextDoesNotRepresentAFloat(nnl.rocks.kactoos.scalar.NumberOfTest)
Test parsesFloat(nnl.rocks.kactoos.scalar.NumberOfTest)
Test parsesInteger(nnl.rocks.kactoos.scalar.NumberOfTest)
Test parsesDouble(nnl.rocks.kactoos.scalar.NumberOfTest)
Test emptyIterator(nnl.rocks.kactoos.scalar.OrTest)
Test testProcVarargs(nnl.rocks.kactoos.scalar.OrTest)
Test oneTrue(nnl.rocks.kactoos.scalar.OrTest)
Test testFunc(nnl.rocks.kactoos.scalar.OrTest)
Test testProc(nnl.rocks.kactoos.scalar.OrTest)
Test allTrue(nnl.rocks.kactoos.scalar.OrTest)
Test testFuncVarargs(nnl.rocks.kactoos.scalar.OrTest)
Test allFalse(nnl.rocks.kactoos.scalar.OrTest)
Test skipIterable(nnl.rocks.kactoos.scalar.ReducedTest)
Test runsScalarMultipleTimes(nnl.rocks.kactoos.scalar.RetryScalarTest)
Test cachesScalarResults(nnl.rocks.kactoos.scalar.SolidScalarTest)
Test worksInThreads(nnl.rocks.kactoos.scalar.SolidScalarTest)
Test cachesScalarResults(nnl.rocks.kactoos.scalar.StickyScalarTest)
Test withCollection(nnl.rocks.kactoos.scalar.SumOfTest)
Test withListOfNumbers(nnl.rocks.kactoos.scalar.SumOfTest)
Test worksInThreads(nnl.rocks.kactoos.scalar.SyncScalarTest)
Test conditionBoolean(nnl.rocks.kactoos.scalar.TernaryTest)
Test conditionFalse(nnl.rocks.kactoos.scalar.TernaryTest)
Test conditionFunc(nnl.rocks.kactoos.scalar.TernaryTest)
Test conditionTrue(nnl.rocks.kactoos.scalar.TernaryTest)
Test asValue(nnl.rocks.kactoos.scalar.TrueTest)
Test rethrowsCheckedToUncheckedException(nnl.rocks.kactoos.scalar.UncheckedScalarTest)
Test okForNoNulls(nnl.rocks.kactoos.ScalarTest)
Test checkDecode(nnl.rocks.kactoos.text.Base64TextTest)
Test comparesToUncheckedText(nnl.rocks.kactoos.text.ComparableTextTest)
Test comparesWithASubtext(nnl.rocks.kactoos.text.ComparableTextTest)
Test ensuresThatFormatterFails(nnl.rocks.kactoos.text.FormattedTextTest)
Test formatsWithText(nnl.rocks.kactoos.text.FormattedTextTest)
Test formatsTextWithCollection(nnl.rocks.kactoos.text.FormattedTextTest)
Test formatsWithLocale(nnl.rocks.kactoos.text.FormattedTextTest)
Test failsForInvalidPattern(nnl.rocks.kactoos.text.FormattedTextTest)
Test formatsTextWithObjects(nnl.rocks.kactoos.text.FormattedTextTest)
Test formatsText(nnl.rocks.kactoos.text.FormattedTextTest)
Test notEmpytString(nnl.rocks.kactoos.text.HexOfTest)
Test empytString(nnl.rocks.kactoos.text.HexOfTest)
Test determinesBlankText(nnl.rocks.kactoos.text.IsBlankTest)
Test determinesNotBlankText(nnl.rocks.kactoos.text.IsBlankTest)
Test determinesEmptyText(nnl.rocks.kactoos.text.IsBlankTest)
Test joinsTexts(nnl.rocks.kactoos.text.JoinedTextTest)
Test joinsStrings(nnl.rocks.kactoos.text.JoinedTextTest)
Test convertsText(nnl.rocks.kactoos.text.LowerTextTest)
Test normalizesText(nnl.rocks.kactoos.text.NormalizedTextTest)
Test repeatsCharText(nnl.rocks.kactoos.text.RepeatedTextTest)
Test repeatsWordsText(nnl.rocks.kactoos.text.RepeatedTextTest)
Test unicodeText(nnl.rocks.kactoos.text.ReplacedTextTest)
Test nonDefaultCharsetText(nnl.rocks.kactoos.text.ReplacedTextTest)
Test notReplaceTextWhenSubstringNotFound(nnl.rocks.kactoos.text.ReplacedTextTest)
Test emptyText(nnl.rocks.kactoos.text.ReplacedTextTest)
Test emptyRegex(nnl.rocks.kactoos.text.ReplacedTextTest)
Test regexConstantReplace(nnl.rocks.kactoos.text.ReplacedTextTest)
Test regexDynamicReplace(nnl.rocks.kactoos.text.ReplacedTextTest)
Test replacesAllOccurrences(nnl.rocks.kactoos.text.ReplacedTextTest)
Test emptyTextAndEmptyRegex(nnl.rocks.kactoos.text.ReplacedTextTest)
Test replaceText(nnl.rocks.kactoos.text.ReplacedTextTest)
Test invalidRegex(nnl.rocks.kactoos.text.ReplacedTextTest)
Test reversedEmptyTextIsEmptyText(nnl.rocks.kactoos.text.ReversedTextTest)
Test reverseText(nnl.rocks.kactoos.text.ReversedTextTest)
Test rotateLeftText(nnl.rocks.kactoos.text.RotatedTextTest)
Test noRotateWhenShiftModZero(nnl.rocks.kactoos.text.RotatedTextTest)
Test rotateRightText(nnl.rocks.kactoos.text.RotatedTextTest)
Test noRotateWhenEmpty(nnl.rocks.kactoos.text.RotatedTextTest)
Test noRotateWhenShiftZero(nnl.rocks.kactoos.text.RotatedTextTest)
Test splitTextWithStringRegex(nnl.rocks.kactoos.text.SplitTextTest)
Test splitTextWithTextRegex(nnl.rocks.kactoos.text.SplitTextTest)
Test splitTextLength(nnl.rocks.kactoos.text.SplitTextTest)
Test splitStringWithTextRegex(nnl.rocks.kactoos.text.SplitTextTest)
Test splitTextItem(nnl.rocks.kactoos.text.SplitTextTest)
Test cutTextWithStartAndEnd(nnl.rocks.kactoos.text.SubTextTest)
Test cutTextWithStart(nnl.rocks.kactoos.text.SubTextTest)
Test swapText(nnl.rocks.kactoos.text.SwappedCaseTextTest)
Test swapEmptyText(nnl.rocks.kactoos.text.SwappedCaseTextTest)
Test checkEncode(nnl.rocks.kactoos.text.TextBase64Test)
Test readsStringBuilder(nnl.rocks.kactoos.text.TextOfTest)
Test readsMultilineInputStream(nnl.rocks.kactoos.text.TextOfTest)
Test readsInputIntoTextWithSmallBufferAndDefaultCharset(nnl.rocks.kactoos.text.TextOfTest)
Test readsFromInputStream(nnl.rocks.kactoos.text.TextOfTest)
Test readsInputIntoTextWithDefaultCharset(nnl.rocks.kactoos.text.TextOfTest)
Test readsMultilineInputStreamWithCarriageReturn(nnl.rocks.kactoos.text.TextOfTest)
Test readsInputIntoText(nnl.rocks.kactoos.text.TextOfTest)
Test readsInputIntoTextWithSmallBuffer(nnl.rocks.kactoos.text.TextOfTest)
Test readsEmptyInputStream(nnl.rocks.kactoos.text.TextOfTest)
Test readsFromReaderWithDefaultEncoding(nnl.rocks.kactoos.text.TextOfTest)
Test printsStackTrace(nnl.rocks.kactoos.text.TextOfTest)
Test readsStringBuffer(nnl.rocks.kactoos.text.TextOfTest)
Test readsFromReader(nnl.rocks.kactoos.text.TextOfTest)
Test readsAnArrayOfBytes(nnl.rocks.kactoos.text.TextOfTest)
Test readsClosedInputStream(nnl.rocks.kactoos.text.TextOfTest)
Test readsEncodedArrayOfCharsIntoText(nnl.rocks.kactoos.text.TextOfTest)
Test trimmedBlankTextIsEmptyText(nnl.rocks.kactoos.text.TrimmedLeftTextTest)
Test convertsText(nnl.rocks.kactoos.text.TrimmedLeftTextTest)
Test trimmedBlankTextIsEmptyText(nnl.rocks.kactoos.text.TrimmedRightTextTest)
Test convertsText(nnl.rocks.kactoos.text.TrimmedRightTextTest)
Test trimmedBlankTextIsEmptyText(nnl.rocks.kactoos.text.TrimmedTextTest)
Test convertsText(nnl.rocks.kactoos.text.TrimmedTextTest)
Test comparesToOtherUncheckedText(nnl.rocks.kactoos.text.UncheckedTextTest)
Test rethrowsCheckedToUncheckedException(nnl.rocks.kactoos.text.UncheckedTextTest)
Test convertsText(nnl.rocks.kactoos.text.UpperTextTest)
Test okForNoNulls(nnl.rocks.kactoos.TextTest)
Test testMillisFormattedUsingIsoFormatter(nnl.rocks.kactoos.time.DateAsTextTest)
Test testDateFormattedUsingIsoFormatter(nnl.rocks.kactoos.time.DateAsTextTest)
Test formatsCurrentTime(nnl.rocks.kactoos.time.DateAsTextTest)
Test testMillisFormattedUsingCustomFormat(nnl.rocks.kactoos.time.DateAsTextTest)
Test testDateFormattedUsingCustomFormat(nnl.rocks.kactoos.time.DateAsTextTest)
Test testZonedDateTimeFormattedWithFormatStringWithLocale(nnl.rocks.kactoos.time.DateAsTextTest)
Test testZonedDateTimeFormattedWithFormatString(nnl.rocks.kactoos.time.DateAsTextTest)
Test testZonedDateTimeFormattedAsIsoDateTime(nnl.rocks.kactoos.time.DateAsTextTest)
Test testDateFormattedUsingCustomFormatDifferentLocale(nnl.rocks.kactoos.time.DateAsTextTest)
Test testMillisFormattedUsingCustomFormatDifferentLocale(nnl.rocks.kactoos.time.DateAsTextTest)
Test testParsingCustomFormattedStringToDate(nnl.rocks.kactoos.time.DateOfTest)
Test testParsingCustomFormatterStringToDate(nnl.rocks.kactoos.time.DateOfTest)
Test testParsingIsoFormattedStringToDate(nnl.rocks.kactoos.time.DateOfTest)
Test testParsingFormattedStringWithFormatterToLocalDateTime(nnl.rocks.kactoos.time.LocalDateTimeOfTest)
Test testParsingIsoFormattedStringToLocalDateTime(nnl.rocks.kactoos.time.LocalDateTimeOfTest)
Test testParsingFormattedStringWithFormatToLocalDateTime(nnl.rocks.kactoos.time.LocalDateTimeOfTest)
Test testParsingFormattedStringWithOffsetToOffsetDateTime(nnl.rocks.kactoos.time.OffsetDateTimeOfTest)
Test testParsingIsoFormattedStringToOffsetDateTime(nnl.rocks.kactoos.time.OffsetDateTimeOfTest)
Test testParsingFormattedStringWithZoneToZonedDateTime(nnl.rocks.kactoos.time.ZonedDateTimeOfTest)
Test testParsingFormattedStringWithFormatterToZonedDateTime(nnl.rocks.kactoos.time.ZonedDateTimeOfTest)
Test testParsingIsoFormattedStringToZonedDateTime(nnl.rocks.kactoos.time.ZonedDateTimeOfTest)
Test testParsingDefaultFormattedStringToZonedDateTime(nnl.rocks.kactoos.time.ZonedDateTimeOfTest)
